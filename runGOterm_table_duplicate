#!/bin/sh
#SBATCH --job-name=GoTable
#SBATCH --time=24:00:00
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=16
#SBATCH --mem=32G


module load r
echo '
library(AnnotationDbi)
library(parallel)
library(tidyverse)
library(GO.db)

# Modify number of GOs to show
topN = 10
#

goannotation = read.delim("/home/manorala/scratch/Functional_annotation/go_annotations.txt", header = F)
names(goannotation) = c("Genes", "GO_terms")
allGOterms =
  goannotation$GO_terms %>%
  strsplit(split = ",") %>%
  unlist() %>%
  unname %>%
  unique()

GOTERM_list = as.list(GOTERM)

keptGOTerms = allGOterms[allGOterms %in% names(GOTERM_list)]

tableGOTerms = mclapply(
  keptGOTerms, mc.cores = detectCores(), function(x){
  grepl(x, goannotation$GO_terms) %>% sum
})

tableGOs = data.frame(GO = keptGOTerms, 
                      occurences = unname(unlist(tableGOTerms))
                      )
					  
tableGOs$Ontology = GOTERM_list[tableGOs$GO] %>% sapply(function(x) {
Ontology(x) }) %>% unlist %>% unname

tableGOs$Term = GOTERM_list[tableGOs$GO] %>% sapply(function(x) {
Term(x) }) %>% unlist %>% unname

tables_top = list()
for (i in c("BP", "MF", "CC")) {
  tables_top[[i]] = filter(tableGOs, Ontology == i & !term == c("biological_process", "cellular_component", "molecular_function))
  tables_top[[i]] = tables_top[[i]][ order(tables_top[[i]]$occurences, 
                                           decreasing = T), ]
  showGON = ifelse(nrow(tables_top[[i]]) < topN, nrow(tables_top[[i]]), topN)
  tables_top[[i]] = tables_top[[i]][ 1:showGON, ]
  tables_top[[i]]$Term = as.factor(tables_top[[i]]$Term)
}

tableGOplot = rbind(tables_top[[1]], tables_top[[2]], tables_top[[3]]) %>%
  data.frame

write.table(tableGOplot,file = "/home/manorala/scratch/Functional_annotation/tableGOPlot.txt", row.names = F, 
            col.names = T, append = F, quote = F, sep = "\t")
' > tmp

Rscript --vanilla tmp


